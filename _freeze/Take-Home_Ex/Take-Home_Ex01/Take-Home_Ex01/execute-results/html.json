{
  "hash": "df349031918b3d68f37b4bca77ed54ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 1\"\nauthor: \"David Chiam\"\ndescription: \"\"\ndate: \"1 May 2025\"\ndate-modified: \"3 May 2025\"\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n# **1. Overview**\n\n## **Setting the scene**\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on **demographic structures and distribution of Singapore in 2024**.\n\n## **Our task**\n\nIn this exercise, Exploratory Data Analysis (EDA) methods and ggplot functions are used to explore:\n\n1.  Need to write something here\n\n2.  and here\n\n# **2. Getting started, Data Loading and Preparation**\n\nThis section documents the process of preparing the dataset for analysis and visualization. It covers the loading of R packages, initial inspection of the dataset, and the necessary wrangling and transformation steps applied.\n\n### **2.1 Load required packages 📦**\n\nBefore importing the data, we load several R packages from the **tidyverse** ecosystem and supporting libraries for data wrangling and visualization. These packages streamline data processing and produce publication-ready plots using `ggplot2`. This setup ensure that we have both the flexibility and power to craft expressive, publication-quality demographic visualizations for the report.\n\n📌 **Summary of Package Roles**\n\n| Library | Description |\n|--------------------------|----------------------------------------------|\n| [**tidyverse**](https://www.tidyverse.org/) | A collection of core packages designed for data science, used extensively for data preparation and wrangling |\n| [**knitr**](https://yihui.org/knitr/) | Generates dynamic R markdown or Quarto reports |\n| [**patchwork**](https://patchwork.data-imaginist.com/) | Combine multiple ggplots into a single layout |\n| [**ggthemes**](https://yutannihilation.github.io/allYourFigureAreBelongToUs/ggthemes/) | Provides extra themes (e.g. economist, wsj) |\n| [**scales**](https://scales.r-lib.org/) | For data/axes label formatting and annotations for ggplot2 |\n| [**ggtext**](https://wilkelab.org/ggtext/) | Supports improved and rich text rendering for ggplot2 |\n| [**ggalt**](https://yonicd.github.io/ggalt/) | A compendium of ‘geoms’, ‘coords’, ‘stats’, scales and fonts for ggplots2 |\n| [**ggridges**](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html) | For ridgeline plots that create the impression of a mountain range. They can be useful for visualising changes in distributions over time or space. |\n| [**ggpubr**](https://github.com/kassambara/ggpubr) | For publication-ready plots. |\n| [**ggextra**](https://github.com/daattali/ggExtra) | For adding marginal plots to ggplot2 |\n| [**cowplot**](https://github.com/wilkelab/cowplot) | Provides precise figure alignment and plot annotation |\n| [**ggnewscale**](https://eliocamp.github.io/ggnewscale/) | Enables multiple fill/colour scales in a single plot. For defining scales in ggplot2. |\n| ggrepel |  |\n\nWe load the following R packages using the `pacman::p_load()` :\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  tidyverse,     # Core data manipulation and ggplot2 plotting\n  knitr,         # Dynamic report generation and rendering\n  patchwork,     # Combines multiple ggplot2 plots\n  ggthemes,      # Additional themes and visual styles\n  scales,        # Formatting axes, scales, and labels\n  ggtext,        # Rich text formatting in ggplot titles/labels\n  ggalt,         # Dumbbell, lollipop, and other advanced geoms\n  ggridges,      # Ridgeline plots to visualize distributions\n  ggpubr,        # Publication-ready ggplot2 enhancements\n  ggExtra,       # Marginal plots for added insight\n  cowplot,       # Publication-quality figure alignment\n  ggnewscale,    # Allows multiple color/fill scales in one ggplot\n  ggrepel        # Allows\n)\n```\n:::\n\n\n### **2.2** Loading the Data and Taking a Glimpse of the Dataset **📂**\n\nThe dataset, *Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024*, published by the [Department of Statistics, Singapore (DOS)](https://www.singstat.gov.sg/) was loaded using the `read_csv()` function from the `readr` package in the tidyverse collection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the dataset\ndf <- read_csv(\"Dataset/respopagesex2024.csv\")\n```\n:::\n\n\nThe dataset contains **60,424 rows** and **6 columns**. Each row represents the count of residents for a specific combination of planning area, subzone, age, sex, and year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n🧾 **Variable Descriptions**\n\n| Column | Type | Description |\n|------------------|------------------------|------------------------------|\n| `PA` | Categorical | Planning Area (e.g., Ang Mo Kio, Bedok) |\n| `SZ` | Categorical | Subzone within each Planning Area |\n| `Age` | Categorical (to be converted) | Age in single years (e.g., 0–100+) |\n| `Sex` | Categorical | Gender: Male / Female |\n| `Pop` | Continuous (Integer) | Number of residents (rounded to nearest 10) |\n| `Time` | Identifier / Constant | Time period (always 2024 in this dataset) |\n\n### **2.3** **Wrangling, Cleaning & Transformation 🧹**\n\nTo ensure the data is ready for exploratory visualization and demographic analysis, a series of wrangling and transformation steps are applied. These steps are logically grouped and reusable across multiple visualization tasks.\n\n#### ✅ Convert **`Age`** to Integer\n\nThe `Age` column is stored as a character string (e.g., `\"100+\"`), which can prevent proper sorting, numeric comparisons, and calculations. I converted it to an integer, coercing `\"100+\"` to `100`, and remove any missing or malformed entries.\n\nThis step ensures that age values are usable in:\n\n-   Population pyramids\n-   Median age calculations\n-   Age band groupings\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>%\n  mutate(Age = as.integer(Age)) %>%  # Convert to numeric (100+ becomes NA)\n  drop_na(Age)                       # Remove missing values caused by conversion\n```\n:::\n\n\n#### ✅ Create `AgeBand` for Grouped Analysis\n\nWorking with 101 separate age values (0–100) may clutter visualizations and dilute insight. Therefore, I bin the ages into meaningful age bands for easier demographic comparison and comparative visualization. These age bands are especially helpful for:\n\n-   Grouped bar charts\n-   Age structure comparisons across planning areas\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>%\n  mutate(AgeBand = cut(Age,\n    breaks = c(0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55,\n               60, 65, 70, 75, 80, 85, 90, 95, 100, Inf),\n    labels = c(\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\",\n               \"30-34\", \"35-39\", \"40-44\", \"45-49\", \"50-54\",\n               \"55-59\", \"60-64\", \"65-69\", \"70-74\", \"75-79\",\n               \"80-84\", \"85-89\", \"90-94\", \"95-99\", \"100+\"),\n    right = FALSE))\n```\n:::\n\n\n#### ✅ Aggregate for Exploratory Plots & Key Insights\n\nThe data was group by Planning Area, Sex, and Age Band to prepare for visual comparisons across demographic segments. Using the code below, we can compute the **aggregated population totals** across:\n\n-   **Age × Sex**: for national pyramids\n-   **Planning Area**: for ranking and spatial comparisons\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# For population pyramid (Age-Sex)\npyramid_data <- df %>%\n  group_by(Age, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# For top 5 planning areas\ntop5_pa <- df %>%\n  group_by(PA) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  slice_max(order_by = Pop, n = 5)\n```\n:::\n\n\n#### ✅ Add Region Classification Based on Planning Area\n\nTo enhance geographical analysis, we classify each Planning Area (`PA`) into one of Singapore’s five official regions (1) Central, (2) East, (3) North, (4) North-East, and (5) West. This grouping follows Singapore’s **Urban Redevelopment Authority (URA) Master Plan** and allows for cleaner regional comparisons, faceted plots, and high-level demographic summaries.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- df %>%\n  mutate(\n    PA = str_trim(str_to_upper(PA)),\n    Region = case_when(\n      PA %in% c(\"BISHAN\", \"BUKIT MERAH\", \"BUKIT TIMAH\", \"CENTRAL AREA\", \"DOWNTOWN CORE\",\n                \"GEYLANG\", \"KALLANG\", \"MARINA EAST\", \"MARINA SOUTH\", \"MUSEUM\", \"NEWTON\",\n                \"NOVENA\", \"ORCHARD\", \"OUTRAM\", \"PAYA LEBAR\", \"QUEENSTOWN\", \"RIVER VALLEY\",\n                \"ROCHOR\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"TANGLIN\",\n                \"TOA PAYOH\", \"MARINE PARADE\") ~ \"Central\",\n      PA %in% c(\"BEDOK\", \"CHANGI\", \"CHANGI BAY\", \"PASIR RIS\", \"TAMPINES\") ~ \"East\",\n      PA %in% c(\"CENTRAL WATER CATCHMENT\", \"MANDAI\", \"SEMBABWANG\", \"SIMPANG\",\n                \"SUNGEI KADUT\", \"WOODLANDS\", \"YISHUN\", \"SEMBAWANG\") ~ \"North\",\n      PA %in% c(\"ANG MO KIO\", \"HOUGANG\", \"NORTH-EASTERN ISLANDS\", \"PUNGGOL\",\n                \"SELETAR\", \"SENGKANG\", \"SERANGOON\") ~ \"North-East\",\n      PA %in% c(\"BOON LAY\", \"BUKIT BATOK\", \"BUKIT PANJANG\", \"CHOA CHU KANG\",\n                \"CLEMENTI\", \"JURONG EAST\", \"JURONG WEST\", \"LIM CHU KANG\",\n                \"PIONEER\", \"TENGAH\", \"TUAS\", \"WESTERN ISLANDS\",\n                \"WESTERN WATER CATCHMENT\") ~ \"West\",\n      TRUE ~ NA_character_\n    )\n  )\n```\n:::\n\n\n#### ✅ Compute the Weighted Median Age\n\nAs the simple median of the `Age` column would be misleading, as it treats each age as equally populated. Instead, we calculate a **weighted median** that reflects **actual population counts** per age to give a statistically more accurate median age for the **entire Singapore resident population**..\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_median <- df %>%\n  arrange(Age) %>%\n  mutate(\n    cum_pop = cumsum(Pop),\n    total_pop = sum(Pop)\n  ) %>%\n  filter(cum_pop >= total_pop / 2) %>%\n  slice(1)\n\nmedian_age <- df_median$Age\n```\n:::\n\n\n#### ✅ Create Aggregated Summary Table\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_summary <- df %>%\n  group_by(Region, PA, AgeBand, Sex) %>%\n  summarise(Total = sum(Pop), .groups = \"drop\")\n```\n:::\n\n\n# 3. Exploratory Data Analysis (EDA) 📊\n\n### 🔍 **3.1 What is the age and gender structure in the Singapore resident population?**\n\n**Goal**: Understand whether the population skews young or old, and whether the gender balance is even.\n\n**Method**: Population pyramids using mirrored horizontal bar charts, grouped by sex and age band.\n\n::: panel-tabset\n## The Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n## The Code Chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Build national_pyramid with label fields\ntotal_pop <- sum(df_summary$Total)\n\nnational_pyramid <- df_summary %>%\n  mutate(Sex = factor(Sex, levels = c(\"Males\", \"Females\"))) %>%\n  group_by(AgeBand, Sex) %>%\n  summarise(Total = sum(Total), .groups = \"drop\") %>%\n  mutate(\n    Perc = Total / total_pop * 100,\n    Total = if_else(Sex == \"Males\", -Total, Total),\n    Label = paste0(round(Perc, 1), \"%\"),\n    hjust_pos = if_else(Sex == \"Males\", 1.1, -0.1)\n  )\n\n\n# Plot\nggplot(national_pyramid, \n       aes(x = AgeBand, y = Total, fill = Sex)) +\n  geom_bar(stat = \"identity\") +\n  geom_hline(yintercept = 0, color = \"black\") +\n  coord_flip() +\n  scale_fill_manual(\n    values = c(\"Males\" = \"#ADD8E6\", \"Females\" = \"#FFC0CB\"),\n    breaks = c(\"Males\", \"Females\")\n  ) +\n  scale_y_continuous(\n    labels = function(x) comma(abs(x)),\n    breaks = scales::pretty_breaks(n = 6)\n  ) +\n  # Percentage labels with grey background\n  geom_label(aes(label = Label, y = 0, hjust = hjust_pos),\n             fill = \"grey90\", color = \"grey30\", size = 2, alpha = 0.65,\n             label.size = NA) +\n  labs(\n    title = \"Singapore Resident Population Pyramid (2024)\",\n    subtitle = \"Mirrored by Gender, Aggregated by Age Bands (with %)\",\n    y = \"Population\", x = \"Age Band\",\n    fill = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"top\",\n    axis.text.x = element_text(size = 10),\n    axis.text.y = element_text(size = 9),\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 10)\n  )\n```\n:::\n\n:::\n\n::: How-Does-it-Work\n![](/Images/Insights.png){width=\"42\"} [<strong>Insights gleamed from this plot in section 3.1</strong>]{style=\"font-size: 30px; vertical-align: middle;\"}\n\nThis population pyramid reveals the demographic structure of Singapore’s resident population as of June 2024. The mirrored horizontal bars clearly show that the population is ageing — with a substantial share concentrated in the 40–64 age bands. The gender distribution is broadly balanced across most age groups, although a higher proportion of females is observed in older age bands, reflecting longer female life expectancy. Younger cohorts (under 25) form a smaller share of the population, suggesting lower birth rates and potential long-term shrinkage of the working-age base. This age imbalance, combined with rising median age, has strategic implications for healthcare planning, social security, and labour force renewal. The pyramid’s symmetry and visual labeling facilitate quick interpretation, while the grey-backed percentage markers offer contextual understanding without clutter. Overall, the chart underscores the demographic transition toward an ageing population — a trend aligned with those of other developed urban nations.\n:::\n\n### 🔍 **3.2 How are age groups distributed across the five regions?**\n\n**Goal**: To explore the demographic composition across Singapore’s five regions using meaningful generational groupings, this visualisation compares the proportion of residents by age cohort. It addresses how youth, workforce, and senior populations differ geographically.\n\n**Method**: Using the 2024 DOS dataset, residents are grouped by region and classified into six age bands based on Singapore’s social-policy generations: *Alpha & Gen Z (0–24yo), Young Adults (25–34yo), Working Adults (35–54yo), Silver Generation (55–64yo), Merdeka Generation (65–74yo), and Pioneer Generation (\\>75yo)*. Percentages are calculated within each region and plotted using a colour-safe, perceptually consistent palette to enhance visual clarity and accessibility.\n\n::: panel-tabset\n## The Combined Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-12-1.png){width=1152}\n:::\n:::\n\n\n*Toggle to the other tabs to view the clearer version of each plot.*\n\nThis visualisation examines the generational distribution of Singapore’s resident population across the five main planning regions, using both absolute population counts and proportional shares. The left panel highlights the total number of residents in each generation, while the right panel normalises these figures to show the internal demographic mix within each region.\n\n## Population Count by Generation\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-13-1.png){width=1152}\n:::\n:::\n\n\n## Population Percentage by Generation\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-14-1.png){width=1152}\n:::\n:::\n\n\n## The Code Chunk\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data prep with generation bands\ndf_generations <- df %>%\n  mutate(\n    AgeGroup = case_when(\n      Age <= 24 ~ \"Alpha & Gen Z (0-24)\",\n      Age <= 34 ~ \"Young Adults (25-34)\",\n      Age <= 54 ~ \"Working Adults (35-54)\",\n      Age <= 64 ~ \"Silver Generation (55-64)\",\n      Age <= 74 ~ \"Merdeka Generation (65-74)\",\n      TRUE ~ \"Pioneer Generation (>75)\"\n    ),\n    AgeGroup = factor(AgeGroup, levels = c(\n      \"Alpha & Gen Z (0-24)\",\n      \"Young Adults (25-34)\",\n      \"Working Adults (35-54)\",\n      \"Silver Generation (55-64)\",\n      \"Merdeka Generation (65-74)\",\n      \"Pioneer Generation (>75)\"\n    ))\n  ) %>%\n  group_by(Region, AgeGroup) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  group_by(Region) %>%\n  mutate(Perc = Pop / sum(Pop) * 100)\n\n# --- Plot A: Count-based ---\nplot_counts <- ggplot(df_generations, aes(x = Region, y = Pop, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = comma(Pop)), position = position_stack(vjust = 0.5),\n            size = 2.2, color = \"black\") +\n  scale_fill_brewer(palette = \"Set3\") +\n  scale_y_continuous(labels = NULL, breaks = NULL) +  # Remove y-axis labels\n  labs(\n    title = \"Population Count by Generation\",\n    subtitle = \"Total residents of each generation by region\",\n    x = NULL, y = NULL,\n    fill = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"none\",\n    plot.subtitle = element_text(size = 8)\n  )\n\n\n# --- Plot B: Percentage-based ---\nplot_perc <- ggplot(df_generations, aes(x = Region, y = Perc, fill = AgeGroup)) +\n  geom_bar(stat = \"identity\") +\n  geom_text(aes(label = paste0(round(Perc, 1), \"%\")),\n            position = position_stack(vjust = 0.5), size =2.2, color = \"black\") +\n  scale_fill_brewer(palette = \"Set3\") +\n  scale_y_continuous(labels = NULL, breaks = NULL) +  # Remove y-axis labels\n  labs(\n    title = \"Population Share by Generation\",\n    subtitle = \"Proportion of each generation by region\",\n    x = NULL, y = NULL,\n    fill = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    legend.position = \"bottom\",\n    plot.subtitle = element_text(size = 8),\n    legend.text = element_text(size = rel(0.7))  # 30% smaller\n  )\n\n# Combine plots\nplot_counts + plot_perc + plot_layout(guides = \"collect\") & \n  theme(legend.position = \"bottom\", legend.text = element_text(size = rel(0.7)))\n```\n:::\n\n:::\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-16-1.png){width=1152}\n:::\n:::\n\n\n::: How-Does-it-Work\n![](/Images/Insights.png){width=\"42\"} [<strong>Insights gleamed from these plots in section 3.2</strong>]{style=\"font-size: 30px; vertical-align: middle;\"}\n\nThese visualisations compares Singapore’s resident population by generation across the five main planning regions, using both absolute ounts (left panel) and proportional shares (right panel). **Working adults (ages 35–54)** form the largest demographic in all regions, especially in the **East and North**. However, the **Central region** stands out for its **higher concentration of older residents**, particularly from the **Merdeka and Pioneer generations**, both in absolute numbers and as a proportion of its population.\n\nConversely, the **North-East and West** regions show a higher share of **younger residents under 35**, reflecting newer housing developments and growing family clusters. While younger generations are more evenly spread in these regions, older cohorts are disproportionately concentrated in the **Central, East, and West**.\n\nSupporting this, the **boxplots and age summaries** reveal **higher median ages** and **tighter interquartile ranges** in these ageing regions—highlighting a more mature demographic profile that warrants targeted **urban planning, healthcare, and ageing-in-place strategies**.\n:::\n\n### 🔍 **3.3 Which Planning Areas have the most concentration of Young and Working Adults?**\n\n**Goal**:\n\n**Method**:\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=1152}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Required packages\npacman::p_load(ggplot2, dplyr, stringr, ggthemes, patchwork)\n\n# Compute Median and IQR per Region\ndf_age_stats <- df %>%\n  filter(!is.na(Region)) %>%\n  group_by(Region, Age) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  group_by(Region) %>%\n  mutate(cum_pop = cumsum(Pop),\n         total_pop = sum(Pop),\n         cum_prop = cum_pop / total_pop) %>%\n  summarise(\n    Median = Age[which.min(abs(cum_prop - 0.5))],\n    Q1 = Age[which.min(abs(cum_prop - 0.25))],\n    Q3 = Age[which.min(abs(cum_prop - 0.75))],\n    .groups = \"drop\"\n  )\n\n# Plot: Median Age and IQR per Region\nggplot(df_age_stats, aes(x = reorder(Region, Median), y = Median)) +\n  geom_point(size = 3, color = \"#3366CC\") +\n  geom_errorbar(aes(ymin = Q1, ymax = Q3), width = 0.2, color = \"#3366CC\", linewidth = 0.8) +\n  coord_flip() +\n  labs(\n    title = \"Median Age with Interquartile Range by Region\",\n    subtitle = \"Singapore Resident Population (2024)\",\n    x = NULL,\n    y = \"Age\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 10)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required libraries\npacman::p_load(dplyr, ggplot2, patchwork, stringr, ggrepel)\n\n# Define generation bands\ngeneration_bands <- tibble(\n  Gen = c(\"Alpha & Gen Z\", \"Young Adults\", \"Working Adults\",\n          \"Silver Gen\", \"Merdeka Gen\", \"Pioneer Gen\"),\n  Start = c(0, 24, 34, 54, 64, 74),\n  End   = c(24, 34, 54, 64, 74, 105),\n  Fill  = c(\"#8dd3c7\", \"#ffffb3\", \"#bebada\", \"#fb8072\", \"#80b1d3\", \"#fdb462\")\n)\n\n# Expand dataset\ndf_expanded <- df %>%\n  filter(!is.na(Region)) %>%\n  select(Region, Age, Pop) %>%\n  slice(rep(1:n(), Pop %/% 10))  # Downsampling for performance\n\n# Compute quartiles per region\nstats_labels <- df_expanded %>%\n  group_by(Region) %>%\n  summarise(\n    Q1 = quantile(Age, 0.25),\n    Median = median(Age),\n    Q3 = quantile(Age, 0.75),\n    .groups = \"drop\"\n  ) %>%\n  pivot_longer(cols = c(Q1, Median, Q3), names_to = \"Type\", values_to = \"Value\") %>%\n  mutate(Label = paste0(Type, \": \", round(Value)))\n\n# Plot\nggplot() +\n  # Generation bands background\n  lapply(1:nrow(generation_bands), function(i) {\n    annotate(\"rect\",\n             xmin = -Inf, xmax = Inf,\n             ymin = generation_bands$Start[i], ymax = generation_bands$End[i],\n             fill = generation_bands$Fill[i], alpha = 0.4)\n  }) +\n  # Boxplot\n  geom_boxplot(data = df_expanded, aes(x = Region, y = Age),\n               fill = \"grey70\", color = \"black\", width = 0.6, outlier.alpha = 0.5) +\n  # Quartile annotations with repel\n  geom_text_repel(\n    data = stats_labels,\n    aes(x = Region, y = Value, label = Label),\n    size = 2.8,\n    color = \"#7b7272\",\n    direction = \"y\",\n    nudge_x = 0.5,\n    segment.color = \"black\"\n  ) +\n  coord_flip() +\n  labs(\n    title = \"Age Distribution Across Regions\",\n    subtitle = \"Boxplot annotated with regional Q1, Median, and Q3 values\",\n    x = NULL, y = \"Age\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    plot.subtitle = element_text(size = 10),\n    axis.text.y = element_text(size = 10),\n    panel.grid.major.y = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-25-1.png){width=672}\n:::\n:::\n\n\n### 🔍 **3.3 Where are children (age 0–14) most concentrated?**\n\n**Goal**: Identify family-oriented areas for policy planning (schools, childcare).\n\n**Method**: Heatmap across Planning Area and Subzone using child population totals.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_children <- df %>%\n  filter(Age < 15) %>%\n  group_by(PA, SZ) %>%\n  summarise(Children = sum(Pop), .groups = \"drop\")\n\nggplot(df_children, aes(x = reorder(SZ, Children), y = PA, fill = Children)) +\n  geom_tile() +\n  scale_fill_viridis_c() +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90)) +\n  labs(title = \"Child Population Density by Subzone\",\n       x = \"Subzone\", y = \"Planning Area\")\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-26-1.png){width=672}\n:::\n:::\n\n\n### 🔍 **3.6 Which subzones are the most densely populated?**\n\n**Goal**: Identify where population pressure may be most intense.\n\n**Method**: Bar chart or (if spatial data available) choropleth map of total population.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_subzone_pop <- df %>%\n  group_by(SZ) %>%\n  summarise(Pop = sum(Pop)) %>%\n  arrange(desc(Pop)) %>%\n  slice_head(n = 20)\n\nggplot(df_subzone_pop, aes(x = reorder(SZ, Pop), y = Pop)) +\n  geom_col(fill = \"darkblue\") +\n  coord_flip() +\n  labs(title = \"Top 20 Most Populated Subzones\", x = \"Subzone\", y = \"Population\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load spatial packages\npacman::p_load(sf, ggplot2, tidyverse, viridis)\n\n# Read the planning area shapefile (GeoPackage or GeoJSON recommended)\nplanning_areas <- st_read(\"Dataset/MP19_PLANNING_AREA_NO_SEA_PL.kml\")  # or .shp/.geojson\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_PLNG_AREA_NO_SEA_PL' from data source \n  `D:\\OneDrive - Singapore Management University\\dchiamz2024\\ISSS608-VAA\\Take-Home_Ex\\Take-Home_Ex01\\Dataset\\MP19_PLANNING_AREA_NO_SEA_PL.kml' \n  using driver `KML'\nSimple feature collection with 55 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Prepare population data: total by PA\npa_pop <- df %>%\n  group_by(PA) %>%\n  summarise(Pop = sum(Pop))\n\n# Ensure both PA names match exactly (some cleaning may be needed)\n# Join spatial and population data\nmap_data <- planning_areas %>%\n  left_join(pa_pop, by = c(\"Name\" = \"PA\"))  # Adjust column name if different\n\n# Plot\nggplot(map_data) +\n  geom_sf(aes(fill = Pop), color = \"white\") +\n  scale_fill_viridis_c(option = \"plasma\", trans = \"log\") +\n  labs(title = \"Population Distribution by Planning Area, Singapore\",\n       fill = \"Population\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(planning_areas$Name)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"kml_1\"  \"kml_2\"  \"kml_3\"  \"kml_4\"  \"kml_5\"  \"kml_6\"  \"kml_7\"  \"kml_8\" \n [9] \"kml_9\"  \"kml_10\" \"kml_11\" \"kml_12\" \"kml_13\" \"kml_14\" \"kml_15\" \"kml_16\"\n[17] \"kml_17\" \"kml_18\" \"kml_19\" \"kml_20\" \"kml_21\" \"kml_22\" \"kml_23\" \"kml_24\"\n[25] \"kml_25\" \"kml_26\" \"kml_27\" \"kml_28\" \"kml_29\" \"kml_30\" \"kml_31\" \"kml_32\"\n[33] \"kml_33\" \"kml_34\" \"kml_35\" \"kml_36\" \"kml_37\" \"kml_38\" \"kml_39\" \"kml_40\"\n[41] \"kml_41\" \"kml_42\" \"kml_43\" \"kml_44\" \"kml_45\" \"kml_46\" \"kml_47\" \"kml_48\"\n[49] \"kml_49\" \"kml_50\" \"kml_51\" \"kml_52\" \"kml_53\" \"kml_54\" \"kml_55\"\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load required packages\npacman::p_load(sf, dplyr, ggplot2, viridis, stringr)\n\n# Step 1: Read the KML file\nplanning_areas <- st_read(\"Dataset/MP19_PLANNING_AREA_NO_SEA_PL.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_PLNG_AREA_NO_SEA_PL' from data source \n  `D:\\OneDrive - Singapore Management University\\dchiamz2024\\ISSS608-VAA\\Take-Home_Ex\\Take-Home_Ex01\\Dataset\\MP19_PLANNING_AREA_NO_SEA_PL.kml' \n  using driver `KML'\nSimple feature collection with 55 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 2: Assign names to each geometry\npa_names <- c(\n  \"ANG MO KIO\", \"BEDOK\", \"CENTRAL WATER CATCHMENT\", \"CHANGI\", \"BISHAN\", \"BOON LAY\",\n  \"MARINA SOUTH\", \"MARINE PARADE\", \"BUKIT BATOK\", \"BUKIT MERAH\", \"BUKIT PANJANG\",\n  \"BUKIT TIMAH\", \"CHANGI BAY\", \"CHOA CHU KANG\", \"CLEMENTI\", \"DOWNTOWN CORE\", \"GEYLANG\",\n  \"TENGAH\", \"HOUGANG\", \"JURONG EAST\", \"JURONG WEST\", \"KALLANG\", \"LIM CHU KANG\", \"MANDAI\",\n  \"MARINA EAST\", \"MUSEUM\", \"NEWTON\", \"NORTH-EASTERN ISLANDS\", \"NOVENA\", \"ORCHARD\",\n  \"OUTRAM\", \"PASIR RIS\", \"PAYA LEBAR\", \"PIONEER\", \"PUNGGOL\", \"QUEENSTOWN\",\n  \"RIVER VALLEY\", \"ROCHOR\", \"SELETAR\", \"SEMBAWANG\", \"SENGKANG\", \"SERANGOON\",\n  \"SIMPANG\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"SUNGEI KADUT\",\n  \"TAMPINES\", \"TANGLIN\", \"TOA PAYOH\", \"TUAS\", \"WESTERN ISLANDS\",\n  \"WESTERN WATER CATCHMENT\", \"WOODLANDS\", \"YISHUN\"\n)\nplanning_areas$PA <- pa_names\n\n# Step 3: Prepare population data\npa_pop <- df %>%\n  mutate(PA = str_to_upper(str_trim(PA))) %>%\n  group_by(PA) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# Step 4: Join population to spatial data\nmap_data <- planning_areas %>%\n  left_join(pa_pop, by = \"PA\")\n\n# Step 5: Plot with linear color scale (light = low pop, dark = high)\nggplot(map_data) +\n  geom_sf(aes(fill = Pop), color = \"white\", size = 0.3) +\n  scale_fill_viridis_c(option = \"plasma\", direction = -1, na.value = \"grey90\") +\n  labs(\n    title = \"Population Distribution by Planning Area, Singapore (2024)\",\n    fill = \"Population\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\npacman::p_load(sf, dplyr, ggplot2, viridis, stringr)\n\n# Step 1: Read the KML file\nplanning_areas <- st_read(\"Dataset/MP19_PLANNING_AREA_NO_SEA_PL.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_PLNG_AREA_NO_SEA_PL' from data source \n  `D:\\OneDrive - Singapore Management University\\dchiamz2024\\ISSS608-VAA\\Take-Home_Ex\\Take-Home_Ex01\\Dataset\\MP19_PLANNING_AREA_NO_SEA_PL.kml' \n  using driver `KML'\nSimple feature collection with 55 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\n# Step 2: Add manually mapped names to the geometries\npa_names <- c(\n  \"ANG MO KIO\", \"BEDOK\", \"CENTRAL WATER CATCHMENT\", \"CHANGI\", \"BISHAN\", \"BOON LAY\",\n  \"MARINA SOUTH\", \"MARINE PARADE\", \"BUKIT BATOK\", \"BUKIT MERAH\", \"BUKIT PANJANG\",\n  \"BUKIT TIMAH\", \"CHANGI BAY\", \"CHOA CHU KANG\", \"CLEMENTI\", \"DOWNTOWN CORE\", \"GEYLANG\",\n  \"TENGAH\", \"HOUGANG\", \"JURONG EAST\", \"JURONG WEST\", \"KALLANG\", \"LIM CHU KANG\", \"MANDAI\",\n  \"MARINA EAST\", \"MUSEUM\", \"NEWTON\", \"NORTH-EASTERN ISLANDS\", \"NOVENA\", \"ORCHARD\",\n  \"OUTRAM\", \"PASIR RIS\", \"PAYA LEBAR\", \"PIONEER\", \"PUNGGOL\", \"QUEENSTOWN\",\n  \"RIVER VALLEY\", \"ROCHOR\", \"SELETAR\", \"SEMBAWANG\", \"SENGKANG\", \"SERANGOON\",\n  \"SIMPANG\", \"SINGAPORE RIVER\", \"SOUTHERN ISLANDS\", \"STRAITS VIEW\", \"SUNGEI KADUT\",\n  \"TAMPINES\", \"TANGLIN\", \"TOA PAYOH\", \"TUAS\", \"WESTERN ISLANDS\",\n  \"WESTERN WATER CATCHMENT\", \"WOODLANDS\", \"YISHUN\"\n)\n\n# Assign the names (assumes order matches exactly with features)\nplanning_areas$PA <- pa_names\n\n# Step 3: Summarise population by PA\npa_pop <- df %>%\n  mutate(PA = str_to_upper(str_trim(PA))) %>%\n  group_by(PA) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\")\n\n# Step 4: Join population to spatial geometries\nmap_data <- planning_areas %>%\n  left_join(pa_pop, by = \"PA\")\n\n# Step 5: Plot\nggplot(map_data) +\n  geom_sf(aes(fill = Pop), color = \"white\", size = 0.2) +\n  scale_fill_viridis_c(option = \"plasma\", trans = \"log\", na.value = \"grey90\") +\n  labs(\n    title = \"Population Distribution by Planning Area, Singapore\",\n    fill = \"Population (log scale)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(face = \"bold\", size = 14),\n    legend.position = \"right\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-Home_Ex01_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [
      "Take-Home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}